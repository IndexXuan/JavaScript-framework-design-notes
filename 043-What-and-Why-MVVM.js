/*******************************************************
    > File Name: 043-What-and-Why-MVVM.js
    > Author: IndexXuan
    > Mail: indexxuan@gmail.com
    > Created Time: 2015年06月30日 星期二 00时19分22秒
 ******************************************************/

/** 
 *  可能有人觉得，这样有点小题大做，但这其实只是js从刀耕火种到工业化的必经之路，就像后端数据库面对海量数据量与访问量
 *  不也发展出分库、主从、集群、负载均衡等技术吗?emberjs和angularjs不单单是引入异步API进行缓冲，还把整个Promise库搞出来，
 *  目的在于异步捕捉错误，在维护状态上，emberjs不单单是依赖于ViewModel，还引入状态机，在移动复制删除一大片节点，emberjs则
 *  视情况使用W3CRange API，这些新API几乎没有什么人知道，只有写框架的人”孤芳自赏“。
 *
 *  总而言之，像监控数组那样成片的操作HTML的东西，要注意的东西太多了，就像jquery的集化操作一样，最后还衍生了set all， get first
 *  链式操作，无new实例化等概念。更何况js界草刚刚进入MVVM这个领域不到一两年，不要指望有什么成套的理论产出，更多的是炒作
 *  与噱头，我们这时候最可靠的小伙伴还是设计模式，经过本土化的设计模式，正如一篇博文提到的那样：
 *  双向绑定的实现的同步机制，像工业革命那样极大的提高了生产效率和代码维护的问题，由于是大生产，就有大生产的范儿。Java早就
 *  进入了这个时代，留下了23种设计模式，Ioc等经验，了解WPF框架的人都知道，一个简单的dependent property，就把设计模式这本书
 *  里面的模式用到了一大半，分析WPF框架源码的话，简直就是看一本设计模式的百科全书，这也一一应用到前端的MVVM！knockoutjs,
 *  avalonjs这些框架里面闪烁着长期熔铸的精华。
 */

// The End...

